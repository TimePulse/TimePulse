- set_headline  "Listing Users' Hours"
= javascript_include_tag "/flot/jquery.flot.js"
= javascript_include_tag "/flot/jquery.flot.symbol.js"
= javascript_include_tag "/flot/jquery.flot.axislabels.js"

.button-wrap
  %div.button.radius#all-user-hours-btn
    All
  %div.button.radius#total-user-hours-btn
    Total
  %div.button.radius#billable-user-hours-btn
    Billable
  %div.button.radius#unbillable-user-hours-btn
    Unbillable

= form_tag hours_reports_path do
  %div.input-container
    %p Start Date
    %input.american_date_entry#start-datepicker{:type => "text", :name => "start_date", :value => @start_date}
  %div.input-container
    %p End Date
    %input.american_date_entry#end-datepicker{:type => "text", :name => "end_date", :value => @end_date}
  = submit_tag "Submit", :id => 'datepicker-submit-btn'

= tabbed_panel do |tp|
  = tp.add_tab('Table') do
    %table.listing
      %tr.week_row
        %td
        - @sundays.each do |sun|
          %td
            %h2= 'Week ending ' + sun
      - @users.each do |u|
        %tr.user_row
          %td
            %h2= u.name
          - @sundays.each do |sunday|
            %td
              %div.billable= WorkUnitQuery.new(u,sunday,'billable').hours
              %div.unbillable= WorkUnitQuery.new(u,sunday,'unbillable').hours
              %div.total= WorkUnitQuery.new(u,sunday,'total').hours
  = tp.add_tab('Graph') do
    #total-graph-container{ :style => 'width:1000px;height:550px;' }
    #billable-graph-container{ :style => 'width:1000px;height:550px;display:none;' }
    #unbillable-graph-container{ :style => 'width:1000px;height:550px;display:none;' }

:javascript
  $(document).ready(function () {
    var totalHoursDataset = #{hours_reports_data(@users,@sundays,'total')};
    var billableHoursDataset = #{hours_reports_data(@users,@sundays,'billable')};
    var unbillableHoursDataset = #{hours_reports_data(@users,@sundays,'unbillable')};
    var totalHours = [];
    var billableHours = [];
    var unbillableHours = [];
    var users = #{get_names(@users)};
    var sundays = #{@sundays};
    var xTicks = #{xaxis_labels(@sundays)};
    var colors = ["blue","#009900","deeppink","#00CCFF","#6600CC","magenta","orange","darkgray","#66FF66"];

    for (var i = 0; i < users.length; i++) {
      totalHours.push(
        { label: users[i],
          data: totalHoursDataset[i],
          points: { symbol: "circle", fillColor: colors[i] },
          color: colors[i] }
      );
      billableHours.push(
        { label: users[i],
          data: billableHoursDataset[i],
          points: { symbol: "circle", fillColor: colors[i] },
          color: colors[i] }
      );
      unbillableHours.push(
        { label: users[i],
          data: unbillableHoursDataset[i],
          points: { symbol: "circle", fillColor: colors[i] },
          color: colors[i] }
      );
    }
    var options = {
      xaxis: {
        axisLabel: 'Week endings',
        axisLabelUseCanvas: true,
        axisLabelPadding: 30,
        ticks: xTicks,
        tickColor: 'transparent'
      },
      yaxis: {
        axisLabel: 'Number of Work Units',
        axisLabelUseCanvas: true,
        axisLabelPadding: 30,
        min: 0,
        max: 600
      },
      points: { show: true },
      lines: { show: true },
      grid: {
        hoverable: true,
        borderWidth: 1
      },
      legend: {
        labelBoxBorderColor: 'none',
        position: 'left'
      }
    }
    $.plot("#total-graph-container", totalHours, options);
    $.plot("#billable-graph-container", billableHours, options);
    $.plot("#unbillable-graph-container", unbillableHours, options);

    var previousPoint = null;
    $("#total-graph-container").bind("plothover", function (event, pos, item) {
      if (item) {
        if (previousPoint != item.datapoint) {
          previousPoint = item.datapoint;
          $("#tooltip").remove();
          showTooltip(item.pageX, item.pageY, item.datapoint[1] + ' hours');
        }
      } else {
        $("#tooltip").remove();
        previousPoint = null;
      }
    });
    $("#billable-graph-container").bind("plothover", function (event, pos, item) {
      if (item) {
        if (previousPoint != item.datapoint) {
          previousPoint = item.datapoint;
          $("#tooltip").remove();
          showTooltip(item.pageX, item.pageY, item.datapoint[1] + ' hours');
        }
      } else {
        $("#tooltip").remove();
        previousPoint = null;
      }
    });
    $("#unbillable-graph-container").bind("plothover", function (event, pos, item) {
      if (item) {
        if (previousPoint != item.datapoint) {
          previousPoint = item.datapoint;
          $("#tooltip").remove();
          showTooltip(item.pageX, item.pageY, item.datapoint[1] + ' hours');
        }
      } else {
        $("#tooltip").remove();
        previousPoint = null;
      }
    });

    function showTooltip(x, y, contents) {
      $('<div id="tooltip">' + contents + '</div>').css( {
        position: 'absolute',
        display: 'none',
        top: y + 5,
        left: x + 5,
        padding: '8px',
        'background-color': '#f0f0f0',
        opacity: 0.50
      }).appendTo('body').fadeIn(200);
    }
  });